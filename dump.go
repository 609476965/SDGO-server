package main

import (
	"fmt"
	"encoding/hex"
	"strings"
)

func SpaceStringsBuilder(str string) string {
	var b strings.Builder
	b.Grow(len(str))
	for _, ch := range str {
		if ch != ' ' {
			b.WriteRune(ch)
		}
	}
	return b.String()
}

func buf(dataHex string) []byte {
	nospace := SpaceStringsBuilder(dataHex)
	data, _ := hex.DecodeString(nospace)
	return data
}

func bot(a []byte) {
	out := fmt.Sprintf("[id] %X,[pos] %d, [%dc] %X|%X|%X|%X", a[0:2], a[4], a[136], a[138:140], a[140:142], a[142:144], a[144:146])
	fmt.Println(out)
}

func main() {
	b := "C5 3A 00 00 01 00 00 01 1A 14 88 00 00 00 00 00 0C 00 00 00 00 00 00 00 F1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 DF 7B E8 18 AF 29 E8 18 5E 57 7F 63 3C 00 6C AA 03 00 65 AA 03 00 63 AA 03 00 00 00 00 00 48 43 7A 00 00 00 00 00 00 00 E2 07 0C 00 0A 00 09 00 2B 00 0B 00 C0 55 70 33 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 04 01 32 77 31 77 30 77 00 00 01 00 00 00 00 00 00"
	a := buf(b)
	fmt.Println(len(a), a[136])
	bot(a)

	WZC := []byte{0x8F, 0x42, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x01, 0x5C, 0x27, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x44, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x07, 0x0C, 0x00, 0x1D, 0x00, 0x10, 0x00, 0x0A, 0x00, 0x3A, 0x00, 0xC0, 0x85, 0x5D, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD, 0x40, 0x00, 0x00, 0x03, 0x01, 0x21, 0x77, 0x1A, 0x77, 0x17, 0x77, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
	bot(WZC)
}


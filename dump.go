package main

import (
	"fmt"
	"encoding/hex"
	"strings"
//	"bytes"
//	"io/ioutil"
)

func spaceStringsBuilder(str string) string {
	var b strings.Builder
	b.Grow(len(str))
	for _, ch := range str {
		if ch != ' ' {
			b.WriteRune(ch)
		}
	}
	return b.String()
}

func buf(dataHex string) []byte {
	nospace := spaceStringsBuilder(dataHex)
	data, _ := hex.DecodeString(nospace)
	return data
}

func bot(a []byte) {
	wing, wingLV := a[148], a[149:153]
	c1, c2, c3, c4 := a[138:140], a[140:142], a[142:144], a[144:146]
	out := fmt.Sprintf("[id] %X,[pos] %d, [%dc] %X|%X|%X|%X, [w%d] %v", a[0:2], a[4], a[136], c1, c2, c3, c4, wing, wingLV)
	fmt.Println(out)
}

func main() {
	b := "26 4E 00 00 02 00 00 01 D5 0B 9F 00 00 00 00 00 0C 00 00 00 00 00 00 00 16 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 CD 31 CD 31 92 46 4A 25 6D 42 A2 77 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 ED 44 74 00 00 00 00 00 00 00 E2 07 0C 00 0D 00 15 00 0E 00 32 00 80 EA 82 2B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 9C 17 11 00 01 00 00 00 81 05 00 00 00 00 00 00 00 00 04 01 07 77 12 77 00 00 30 77 02 00 05 02 2A 2C 22 "
	a := buf(b)
	fmt.Println(len(a), a[148], a[149:153])
	bot(a)

	WZC := []byte{0x8F, 0x42, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x01, 0x5C, 0x27, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x44, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x07, 0x0C, 0x00, 0x1D, 0x00, 0x10, 0x00, 0x0A, 0x00, 0x3A, 0x00, 0xC0, 0x85, 0x5D, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD, 0x40, 0x00, 0x00, 0x03, 0x01, 0x21, 0x77, 0x1A, 0x77, 0x17, 0x77, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
	bot(WZC)


/*	data4 := buf(logData4)
	p1 := ioutil.NopCloser(bytes.NewReader(data4))
	buffer := make([]byte, len(data4))
	for {
		f, err := readFrame(p1, buffer)
		if err != nil {
			return
		}

		fmt.Println("[pkt]", f)
	}*/

}





